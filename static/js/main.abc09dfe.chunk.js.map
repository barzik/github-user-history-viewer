{"version":3,"sources":["components/Input.jsx","components/Item.jsx","components/List.jsx","services/repoService.js","components/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","onSubmit","event","preventDefault","text","target","value","handleSubmit","name","type","placeholder","Item","repo","Date","parse","created_at","toLocaleDateString","description","rel","href","html_url","List","rows","repos","map","index","push","className","repoService","user","a","url","fetch","response","json","Container","useState","reposList","setRepos","reposListFromServer","data-testid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAgBeA,EAhBD,SAACC,GAMX,OACI,sBAAMC,SANW,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOD,KAAKE,MAC/BN,EAAMO,aAAaH,IAGnB,SACI,uBACII,KAAK,OACLC,KAAK,OACLC,YAAY,sPCAbC,EAXF,SAACX,GACV,OACI,gCACI,6BAAKA,EAAMY,KAAKJ,OAChB,gCAAQ,IAAIK,KAAKA,KAAKC,MAAMd,EAAMY,KAAKG,aAAaC,uBACpD,4BAAIhB,EAAMY,KAAKK,cACf,mBAAGC,IAAI,aAAaC,KAAMnB,EAAMY,KAAKQ,SAAUf,OAAO,SAAtD,SAAgEL,EAAMY,KAAKQ,eCKxEC,EATF,SAACrB,GACV,IAAIsB,EAAO,GAEX,OADAtB,EAAMuB,MAAMC,KAAI,SAACZ,EAAMa,GAAP,OAAiBH,EAAKI,KAAK,cAAC,EAAD,CAAkBd,KAAMA,GAAba,OAElD,qBAAKE,UAAU,aAAf,SACKL,KCAEM,EAPE,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACZC,EADY,uCAC0BF,EAD1B,mBAEKG,MAAMD,GAFX,cAEZE,EAFY,gBAGEA,EAASC,OAHX,cAGZX,EAHY,yBAIXA,GAJW,2CAAH,sDCqBFY,EAfG,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACFC,EADE,KAEd/B,EAAY,uCAAG,WAAOsB,GAAP,eAAAC,EAAA,sEACiBF,EAAYC,GAD7B,OACXU,EADW,OAEjBD,EAASC,GAFQ,2CAAH,sDAIlB,OACI,sBAAKC,cAAY,yBAAjB,UACI,gLACA,cAAC,EAAD,CAAOjC,aAAcA,IACrB,cAAC,EAAD,CAAMgB,MAAOc,QCLVI,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCMSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.abc09dfe.chunk.js","sourcesContent":["const Input = (props) => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const text = event.target.text.value;\n        props.handleSubmit(text);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                name=\"text\"\n                type=\"text\"\n                placeholder=\"הקלידו שם של משתמש בגיטהאב, למשל barzik ולחצו על אנטר\"\n            />\n        </form>);\n}\n\nexport default Input;\n","const Item = (props) => {\n    return (\n        <div>\n            <h2>{props.repo.name}</h2>\n            <small>{new Date(Date.parse(props.repo.created_at)).toLocaleDateString()}</small>\n            <p>{props.repo.description}</p>\n            <a rel=\"noreferrer\" href={props.repo.html_url} target=\"_blank\">{props.repo.html_url}</a>\n        </div>\n    )\n}\n\nexport default Item;","import Item from './Item';\n\nconst List = (props) => {\n    let rows = [];\n    props.repos.map((repo, index) => rows.push(<Item key={index} repo={repo} />))\n    return (\n        <div className=\"list-group\">\n            {rows}\n        </div>)\n}\n\nexport default List;\n","const repoService = async (user) => {\n  const url = `https://api.github.com/users/${user}/repos`;\n  const response = await fetch(url);\n  const repos = await response.json();\n  return repos;\n};\n\nexport default repoService;\n","import Input from \"./Input\";\nimport List from \"./List\";\nimport repoService from './../services/repoService';\nimport { useState } from 'react';\n\n\nconst Container = () => {\n    const [reposList, setRepos] = useState([]);\n    const handleSubmit = async (user) => {\n        const reposListFromServer = await repoService(user);\n        setRepos(reposListFromServer);\n    }\n    return (\n        <div data-testid=\"general-repo-container\">\n            <h2>טופס חיפוש שם משתמש בגיטהאב</h2>\n            <Input handleSubmit={handleSubmit} />\n            <List repos={reposList} />\n        </div>\n    )\n}\n\nexport default Container;","import './App.css';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}